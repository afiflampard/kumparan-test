name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: hertz_user
          POSTGRES_PASSWORD: hertz_pass
          POSTGRES_DB: hertz_db
        options: >-
          --health-cmd="pg_isready -U hertz_user -d hertz_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        options: >-
          --health-cmd="curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        run: swag init -g main.go -o ./docs
        

      - name: Set up ENV file
        run: |
          echo "APP_NAME=HertzApp" >> .env
          echo "PORT=8080" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=hertz_user" >> .env
          echo "DB_PASSWORD=hertz_pass" >> .env
          echo "DB_NAME=hertz_db" >> .env
          echo "JWT_SECRET=supersecret" >> .env
          echo "ELASTIC_URL=http://localhost:9200" >> .env

      - name: Install dependencies
        run: go mod tidy

      - name: Install sql-migrate
        run: go install github.com/rubenv/sql-migrate/...@latest

      - name: Run DB Migrations
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: hertz_user
          DB_PASSWORD: hertz_pass
          DB_NAME: hertz_db
        run: |
          export DATABASE_URL="postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable"

          echo "Running author migrations..."
          sql-migrate up -config=domain/authors/dbconfig.yml -env=development

          echo "Running article migrations..."
          sql-migrate up -config=domain/articles/dbconfig.yml -env=development

      - name: Run tests
        run: go test ./... -v